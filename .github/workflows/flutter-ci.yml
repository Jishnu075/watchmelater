name: Flutter Release Build

on:
  push:
    branches:
      - release
    tags:
      - 'v*'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
            ~/.pub-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Setup config files
        run: |
          echo "${{ secrets.ANDROID_GOOGLE_SERVICES_JSON }}" | base64 -d > android/app/google-services.json
          echo "${{ secrets.IOS_GOOGLE_SERVICES_JSON }}" | base64 -d > ios/Runner/GoogleService-Info.plist
          echo "${{ secrets.ENV_FILE }}" | base64 -d > .env
          
      - name: Setup Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/upload-keystore.jks
          echo "storeFile=../upload-keystore.jks" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties

          # to test keystore
      - name: Display Release Key Fingerprints
        run: |
          keytool -list -v \
            -alias ${{ secrets.KEY_ALIAS }} \
            -keystore android/app/upload-keystore.jks \
            -storepass ${{ secrets.STORE_PASSWORD }} \
            | grep -A 2 "Certificate fingerprints:"
          
      - name: Build Android APK
        run: flutter build apk --release
        
      - name: Build Android App Bundle
        run: flutter build appbundle --release
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: build-outputs
          path: |
            build/app/outputs/flutter-apk/
            build/app/outputs/bundle/
          retention-days: 5
          
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          name: Release ${{ github.ref_name }}
          generate_release_notes: true